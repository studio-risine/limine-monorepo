generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  createdAt DateTime  @default(now()) @map("created_at")
  processes Process[]
  tokens    Token[]
  accounts  Account[]

  @@map("users")
}

enum TokenType {
  PASSWORD_RECOVER
}

model Token {
  id   String    @id @default(uuid())
  type TokenType

  createdAt DateTime @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("tokens")
}

enum AccountProvider {
  GMAIL
}

model Account {
  id String @id @default(uuid())

  provider          AccountProvider
  providerAccountId String          @unique @map("provider_account_id")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@unique([userId, providerAccountId])
  @@map("accounts")
}

model Process {
  id           String  @id @default(uuid())
  name         String
  descripition String?
  thumbnailUrl String? @map("thumbnail_url")
  slug         String  @unique

  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  startedOn DateTime?  @map("started_on")
  owner     User       @relation(fields: [userId], references: [id])
  userId    String
  deadlines Deadline[]

  @@map("processes")
}

model Deadline {
  id   String @id @default(uuid())
  name String

  process   Process @relation(fields: [processId], references: [id])
  processId String

  createdAt DateTime @default(now()) @map("created_at")
  deadline  DateTime

  @@map("deadlines")
}
